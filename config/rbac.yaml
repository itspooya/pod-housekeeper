apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-housekeeper-controller-manager
  namespace: pod-housekeeper-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-housekeeper-manager-role
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "patch", "delete"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-housekeeper-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-housekeeper-manager-role
subjects:
- kind: ServiceAccount
  name: pod-housekeeper-controller-manager
  namespace: pod-housekeeper-system
---
# Permissions for the controller manager to manage leader election leases
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-housekeeper-leader-election-role
  namespace: pod-housekeeper-system # Needs to be in the same namespace as the lease
rules:
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-housekeeper-leader-election-rolebinding
  namespace: pod-housekeeper-system # Needs to be in the same namespace as the Role and ServiceAccount
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-housekeeper-leader-election-role
subjects:
- kind: ServiceAccount
  name: pod-housekeeper-controller-manager
  # No need to specify namespace here, as RoleBinding is already namespaced 